/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.KelolaBarang;
import controller.KelolaTransaksi;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.Barang;
import model.Pesanan;
import model.PesananTableModel;
import org.jdesktop.xswingx.PromptSupport;

/**
 *
 * @author Syauqi Rahmat Sugara
 */
public class PembayaranForm extends javax.swing.JDialog {

    /**
     * Creates new form Matakuliah
     */
    private final KelolaBarang dbKB = new KelolaBarang();
    private final KelolaTransaksi dbKT = new KelolaTransaksi();
    private PesananTableModel pesTableModel;
    private List<Barang> listBrg = new ArrayList<>();
    private List<Pesanan> pesList = new ArrayList<>();
    private Barang brg = new Barang();
    private Pesanan pes = new Pesanan();

    public PembayaranForm(java.awt.Frame parent, boolean modal, int idPesan) throws SQLException {
        super(parent, modal);
        pes.setIdPesan(idPesan);
        pesTableModel = new PesananTableModel(pesList);
        initComponents();
        PromptSupport.setPrompt("Jumlah", jumlahText);
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        listBrg = dbKB.getListBarang();

        for (Barang barangs : listBrg) {
            model.addElement(barangs.getNama());
        }
        barangCombo.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        pesananTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        barangCombo = new javax.swing.JComboBox<>();
        jumlahText = new javax.swing.JTextField();
        prosesHapus = new javax.swing.JButton();
        pesanButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        totalLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pesananTable.setModel(pesTableModel);
        jScrollPane2.setViewportView(pesananTable);

        jPanel2.setBackground(new java.awt.Color(52, 73, 94));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("212 MART");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        barangCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Pilih Barang--" }));
        barangCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barangComboActionPerformed(evt);
            }
        });

        jumlahText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumlahTextActionPerformed(evt);
            }
        });

        prosesHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/cross-sketch.png"))); // NOI18N
        prosesHapus.setText("Hapus");
        prosesHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prosesHapusActionPerformed(evt);
            }
        });

        pesanButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pesanButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/login-sketch.png"))); // NOI18N
        pesanButton.setText("Pesan");
        pesanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesanButtonActionPerformed(evt);
            }
        });

        totalLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        totalLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/dollars-coins-stacks-sketch.png"))); // NOI18N
        totalLabel.setText("0");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Total Tagihan, Murahkan :)");

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/home-sketch.png"))); // NOI18N
        jMenu1.setText("Menu Utama");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(prosesHapus)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(barangCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jumlahText, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addComponent(pesanButton)))
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78))))
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(pesanButton))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(barangCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jumlahText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prosesHapus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(13, 13, 13)
                .addComponent(totalLabel)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(433, 532));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        this.dispose();
        new MenuUtamaForm().setVisible(true);
    }//GEN-LAST:event_jMenu1MouseClicked

    private void barangComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barangComboActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_barangComboActionPerformed

    private void pesanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesanButtonActionPerformed
        // TODO add your handling code here:
        try {
            String nama = barangCombo.getSelectedItem().toString();
            String jum = jumlahText.getText();
            int i=Math.addExact(dbKT.getMaxId(), 1);
            if (!jum.isEmpty()) { // melakukan pengecekan inputan
                if (jum.matches("[0-9]*") && Integer.parseInt(jum)>0) {

                    listBrg = dbKB.getListBarang(null,nama);
                    for (Barang barangs : listBrg) {
                        pes.setNo(i);
                        pes.setIdBarang(barangs.getId());
                        pes.setJumlah(Integer.parseInt(jum));
                        int total=Math.multiplyExact(pes.getJumlah(), barangs.getHarga());
                        pes.setTotalHarga(total);
                        if(dbKB.getStok(pes.getIdBarang())>=pes.getJumlah()){
                            if (dbKT.getCountPesan(pes.getIdBarang(), pes.getIdPesan()) == 0) {                          
                                dbKT.tambahPesanan(pes);
                            } else {
                                int totalUpdate = pes.getJumlah() * barangs.getHarga();
                                dbKT.ubahPesanan(pes.getIdPesan(), pes.getIdBarang(), pes.getJumlah(), totalUpdate);
                            }
                            dbKB.ubahStok(pes.getIdBarang(), pes.getJumlah(), true);
                        }else{
                            JOptionPane.showMessageDialog(this, "Maaf stok "+nama+" tersisa hanya "+dbKB.getStok(pes.getIdBarang()));
                        }
                    }

                    pesList = dbKT.getListPesanan(pes.getIdPesan());
                    pesTableModel.setPesanList(pesList);
                    pesTableModel.fireTableDataChanged();
                    totalLabel.setText(String.valueOf(dbKT.getTagihan(pes.getIdPesan())));
                } else {
                    JOptionPane.showMessageDialog(this, "Inputan jumlah harus format bilangan positif lebih dari 0");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Jumlah tidak boleh kosong");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_pesanButtonActionPerformed

    private void prosesHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prosesHapusActionPerformed
        // TODO add your handling code here:
        if (pesananTable.getSelectedRow() >= 0) {
            Pesanan pesSelected;
            int selectedRow = pesananTable.getSelectedRow();
            pesSelected = pesTableModel.getPesanList().get(selectedRow);
            try {
                int response = JOptionPane.showConfirmDialog(null, "Apakah anda yakin akan menghapus data ini?", "Confirm",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

                if (response == JOptionPane.YES_OPTION) {
                    dbKB.ubahStok(pesSelected.getIdBarang(), pesSelected.getJumlah(), false);
                    dbKT.hapusPesanan(pesSelected.getIdBarang(),pes.getIdPesan()); // melakukan proses penghapusan di database
                    pesList = dbKT.getListPesanan(pes.getIdPesan());
                    pesTableModel.setPesanList(pesList);
                    pesTableModel.fireTableDataChanged();
                    totalLabel.setText(String.valueOf(dbKT.getTagihan(pes.getIdPesan())));
                }

            } catch (SQLException ex) {

            }
        } else {
            JOptionPane.showMessageDialog(this, "Harus memilih data terlebih dahulu");
        }
    }//GEN-LAST:event_prosesHapusActionPerformed

    private void jumlahTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumlahTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jumlahTextActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> barangCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jumlahText;
    private javax.swing.JButton pesanButton;
    private javax.swing.JTable pesananTable;
    private javax.swing.JButton prosesHapus;
    private javax.swing.JLabel totalLabel;
    // End of variables declaration//GEN-END:variables
}
